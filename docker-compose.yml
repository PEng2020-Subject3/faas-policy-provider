version: "3.3"

services:
  gateway:
    ports:
      - 8080:8080
    image: openfaas/gateway:0.11.1
    networks:
      - federation
    environment:
      functions_provider_url: "http://faas-policy:8080/"
      read_timeout: "5m5s" # Maximum time to read HTTP request
      write_timeout: "5m5s" # Maximum time to write HTTP response
      upstream_timeout: "5m" # Maximum duration of upstream function call - should be more than read_timeout and write_timeout
      dnsrr: "true" # Temporarily use dnsrr in place of VIP while issue persists on PWD
      faas_nats_address: "nats"
      faas_nats_port: 4222
      direct_functions: "false" # Functions are invoked directly over the overlay network
      direct_functions_suffix: ""
      basic_auth: "${BASIC_AUTH:-false}"
      secret_mount_path: "/run/secrets/"
      scale_from_zero: "true" # Enable if you want functions to scale from 0/0 to min replica count upon invoke
      max_idle_conns: 1024
      max_idle_conns_per_host: 1024
    deploy:
      resources:
        # limits:   # Enable if you want to limit memory usage
        #     memory: 200M
        reservations:
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s
      placement:
        constraints:
          - "node.platform.os == linux"

  faas-policy:
    ports:
      - 8081:8080
    image: gitlab-registry.tubit.tu-berlin.de/stendler/faas-policy-provider:latest
    networks:
      - federation
    environment:
      provider: "http://faas-provider:8080"
      read_timeout: "5m5s" # set both here, and on your functions
      write_timeout: "5m5s" # set both here, and on your functions
    deploy:
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"
      resources:
        # limits:   # Enable if you want to limit memory usage
        #     memory: 100M
        reservations:
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s

  faas-provider:
    ports:
      - 8082:8080
    image: openfaas/faas-inmemory:latest
    networks:
      - federation
    environment:
      read_timeout: "5m5s" # set both here, and on your functions
      write_timeout: "5m5s" # set both here, and on your functions
    deploy:
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"
      resources:
        # limits:   # Enable if you want to limit memory usage
        #     memory: 100M
        reservations:
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s

  nats:
    image: nats-streaming:0.11.2
    # Uncomment the following port mappings if you wish to expose the
    # NATS client and/or management ports you must also add `-m 8222` to the command
    # ports:
    #     - 4222:4222
    #     - 8222:8222
    command: "--store memory --cluster_id faas-cluster"
    networks:
      - federation
    deploy:
      resources:
        limits:
          memory: 125M
        reservations:
          memory: 50M
      placement:
        constraints:
          - "node.platform.os == linux"

  queue-worker:
    image: openfaas/queue-worker:0.7.1
    networks:
      - federation
    environment:
      max_inflight: "1"
      ack_wait: "5m5s" # Max duration of any async task / request
      basic_auth: "${BASIC_AUTH:-false}"
      secret_mount_path: "/run/secrets/"
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s
      placement:
        constraints:
          - "node.platform.os == linux"

networks:
  federation:
    driver: overlay
    attachable: true